# -*- coding: utf-8 -*-
"""print.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yWsKyheRLq6PD0j-oyPTFgRFHoAH_L6N
"""

import requests
import bs4
import openpyxl
import random
import pandas as pd
import json,jsonify

from bs4 import BeautifulSoup

def quiz_file(key):
  URL = "https://www.javatpoint.com/" + key + "-mcq"
  # print(URL)
  r = requests.get(URL)

  soup = BeautifulSoup(r.content, 'html5lib')
  ti=soup.title.text; #title of quiz
   # If this line causes an error, run 'pip install html5lib' or install html5lib
  #print(ti)

  s = soup.find('div', class_='onlycontentinner')

  q = s.find_all('p',class_='pq')

  o = s.find_all('ol',class_='pointsa')

  so=s.find_all('div',class_='testanswer')

  questions=[]
  options=[]
  solution=[]

  for line in q:
    questions.append(line.text)

  for line in o:
    options.append(line.text)

  for line in so:
    solution.append(line.text)


  questions=questions[0:35]
  options=options[0:35]
  solution=solution[0:35]

  answer=[]
  for x in solution:
      answer.append(x.replace("\n", " "))
  crrct=[]
  for line in answer:
    crrct.append(line[10:11])

  choices=[]
  for line in options:
    choices.append(line.splitlines())

  for line in choices:
    line.pop(0)


  a=[]
  for line in choices:

      a.append(line[0])
  b=[]
  for line in choices:

      b.append(line[1])
  c=[]
  for line in choices:

      c.append(line[2])
  d=[]
  for line in choices:

      d.append(line[3])


  tick=[]
  i=0
  for line in crrct:

    if(line=='a'):
      tick.append(a[i])
    elif(line=='b'):
      tick.append(b[i])

    elif(line=='c'):
      tick.append(c[i])

    else:
      tick.append(d[i])

    i+=1


    filteredq=[]
  filtereda=[]
  filteredb=[]
  filteredc=[]
  filteredd=[]
  filteredtick=[]

  keyword=['loop','condition','object','classes','file','if','else','java']



  for i in questions:
    if(any(ele in i for ele in keyword) and i!="Null"):

        j=questions.index(i)

        filteredq.append(i)
        filtereda.append(a[j])
        filteredb.append(b[j])
        filteredc.append(c[j])
        filteredd.append(d[j])
        filteredtick.append(tick[j])


  # Sample data list (replace this with your actual data)


  # Create a DataFrame from the list
  df = {"Questions": filteredq,"Choice A":filtereda,"Choice B":filteredb,"Choice C":filteredc,"Choice D":filteredd,"Answer":filteredtick}
  return df
  

  # print(df)
  

 
  #incrrct=[]
  ## Specify the file path where you want to save the Excel file
  #excel_file_path = "datafiltered14.xlsx"
#
 ### Save the DataFrame to an Excel file
  #df.to_excel(excel_file_path, index=False)
#
  #print(f"Data saved to {excel_file_path}")
#
  #quiz_data=[]
  #def load_quiz(file_path):
  #  workbook = openpyxl.load_workbook(file_path)
  #  sheet = workbook.active
  #  quiz_data = []
#
  #  for row in sheet.iter_rows(min_row=2, values_only=True):
  #     question, choice_a, choice_b, choice_c, choice_d, correct_answer = row
  #     choices = [choice_a, choice_b, choice_c, choice_d]
  #     random.shuffle(choices)  # Shuffle answer choices
  #     quiz_data.append({
  #         'question': question,
  #         'choices': choices,
  #         'correct_answer': correct_answer
  #     })
#
  #  return quiz_data
#
 #
#
  #def start_quiz(quiz_data):
  #   score = 0
  #   for i, question_data in enumerate(quiz_data, start=1):
  #       print(f"Question {i}: {question_data['question']}")
  #       for j, choice in enumerate(question_data['choices'], start=1):
  #           print(f"{j}. {choice}")
  #       user_answer = input("Enter your choice (1/2/3/4): ")
  #       if user_answer == str(question_data['choices'].index(question_data['correct_answer']) + 1):
  #           print("Correct!\n")
  #           score += 1
  #       else:
  #           incrrct.append(question_data['question'])
  #           print(f"Wrong! The correct answer is {question_data['correct_answer']}\n")
  #   print(f"You got {score} out of {len(quiz_data)} questions correct.")
  #
  #if __name__ == "__main__":
  #   excel_file_path = "datafiltered14.xlsx"  # Change this to your Excel file path
  #   quiz_data = load_quiz(excel_file_path)
  #   start_quiz(quiz_data)
#
  
